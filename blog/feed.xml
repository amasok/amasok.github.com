<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>amasok's blog</title>
  <subtitle>技術ネタ中心ブログ</subtitle>
  <id>http://amasok.github.io/blog/article</id>
  <link href="http://amasok.github.io/blog/article"/>
  <link href="http://amasok.github.io/blog/feed.xml" rel="self"/>
  <updated>2014-03-19T10:20:00Z</updated>
  <author>
    <name>amasok</name>
  </author>
  <entry>
    <title>【iOS】上にスクロールした時だけバーを表示する</title>
    <link rel="alternate" href="http://amasok.github.io/blog/article/2014/03/19/ios-scrollview-size.html"/>
    <id>http://amasok.github.io/blog/article/2014/03/19/ios-scrollview-size.html</id>
    <published>2014-03-19T10:20:00Z</published>
    <updated>2014-03-19T19:44:16+09:00</updated>
    <author>
      <name>amasok</name>
    </author>
    <content type="html">&lt;p&gt;1.上にスクロールした時だけバーを表示する&lt;br&gt;
2.下にスクロールした際はバーを非表示にする&lt;br&gt;
3.一番下までスクロールした際のバウンス時はバーを非表示にする  &lt;/p&gt;
&lt;pre class="highlight c"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;div class="lineno"&gt;2&lt;/div&gt;&lt;div class="lineno"&gt;3&lt;/div&gt;&lt;div class="lineno"&gt;4&lt;/div&gt;&lt;div class="lineno"&gt;5&lt;/div&gt;&lt;div class="lineno"&gt;6&lt;/div&gt;&lt;div class="lineno"&gt;7&lt;/div&gt;&lt;div class="lineno"&gt;8&lt;/div&gt;&lt;div class="lineno"&gt;9&lt;/div&gt;&lt;div class="lineno"&gt;10&lt;/div&gt;&lt;div class="lineno"&gt;11&lt;/div&gt;&lt;div class="lineno"&gt;12&lt;/div&gt;&lt;div class="lineno"&gt;13&lt;/div&gt;&lt;div class="lineno"&gt;14&lt;/div&gt;&lt;div class="lineno"&gt;15&lt;/div&gt;&lt;div class="lineno"&gt;16&lt;/div&gt;&lt;div class="lineno"&gt;17&lt;/div&gt;&lt;div class="lineno"&gt;18&lt;/div&gt;&lt;div class="lineno"&gt;19&lt;/div&gt;&lt;div class="lineno"&gt;20&lt;/div&gt;&lt;div class="lineno"&gt;21&lt;/div&gt;&lt;div class="lineno"&gt;22&lt;/div&gt;&lt;div class="lineno"&gt;23&lt;/div&gt;&lt;div class="lineno"&gt;24&lt;/div&gt;&lt;div class="lineno"&gt;25&lt;/div&gt;&lt;div class="lineno"&gt;26&lt;/div&gt;&lt;div class="lineno"&gt;27&lt;/div&gt;&lt;div class="lineno"&gt;28&lt;/div&gt;&lt;div class="lineno"&gt;29&lt;/div&gt;&lt;div class="lineno"&gt;30&lt;/div&gt;&lt;div class="lineno"&gt;31&lt;/div&gt;&lt;div class="lineno"&gt;32&lt;/div&gt;&lt;div class="lineno"&gt;33&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;
&lt;span class="c1"&gt;//scrollしている間呼び出され続ける
&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;scrollViewDidScroll&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UIScrollView&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;scrollView&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//scrollした位置を取得する
&lt;/span&gt;    &lt;span class="n"&gt;CGPoint&lt;/span&gt; &lt;span class="n"&gt;currentPoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;scrollView&lt;/span&gt; &lt;span class="n"&gt;contentOffset&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//上にスクロールした場合にバー(_tabBar)を表示する
&lt;/span&gt;    &lt;span class="n"&gt;_tabBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrollBeginingPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;currentPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;YES&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


    &lt;span class="c1"&gt;//バウンスした際にhiddenが解除されてしまうので、
&lt;/span&gt;    &lt;span class="c1"&gt;//scrollViewの一番下までスクロールした際にバーを削除する
&lt;/span&gt;    &lt;span class="c1"&gt;//scrollView.bounds.size.height=画面サイズ
&lt;/span&gt;    &lt;span class="c1"&gt;//scrollView.contentOffset.y=スクロールした位置
&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;viewSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrollView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;scrollView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentOffset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;//scrollView.contentSize.height=scrollView全体のサイズ
&lt;/span&gt;    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;contentSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scrollView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentSize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewSize&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;contentSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_tabBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//scrollを開始した時点で一度だけ呼ばれる
&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;scrollViewWillBeginDragging&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UIScrollView&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;scrollView&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//scrollを開始した値を取得する
&lt;/span&gt;    &lt;span class="n"&gt;scrollBeginingPoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;scrollView&lt;/span&gt; &lt;span class="n"&gt;contentOffset&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;これでできた。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>webViewを継承しているclassでscrollViewのメソッドを使う時のメモ</title>
    <link rel="alternate" href="http://amasok.github.io/blog/article/2014/03/18/webview-scrollview.html"/>
    <id>http://amasok.github.io/blog/article/2014/03/18/webview-scrollview.html</id>
    <published>2014-03-17T20:26:00Z</published>
    <updated>2014-03-19T19:11:25+09:00</updated>
    <author>
      <name>amasok</name>
    </author>
    <content type="html">&lt;p&gt;簡単なんだけど、最初よくわからなかったのでメモ&lt;/p&gt;

&lt;p&gt;test.h&lt;/p&gt;
&lt;pre class="highlight c"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;div class="lineno"&gt;2&lt;/div&gt;&lt;div class="lineno"&gt;3&lt;/div&gt;&lt;div class="lineno"&gt;4&lt;/div&gt;&lt;div class="lineno"&gt;5&lt;/div&gt;&lt;div class="lineno"&gt;6&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;span class="c1"&gt;//UIScrollViewDelegateをデリゲート？する。
&lt;/span&gt;
&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;webtest&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UIWebView&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UIScrollViewDelegate&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;

&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;viewDidLoad内でsubScrollViewを許可。&lt;/p&gt;

&lt;p&gt;test.m&lt;/p&gt;
&lt;pre class="highlight c"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;div class="lineno"&gt;2&lt;/div&gt;&lt;div class="lineno"&gt;3&lt;/div&gt;&lt;div class="lineno"&gt;4&lt;/div&gt;&lt;div class="lineno"&gt;5&lt;/div&gt;&lt;div class="lineno"&gt;6&lt;/div&gt;&lt;div class="lineno"&gt;7&lt;/div&gt;&lt;div class="lineno"&gt;8&lt;/div&gt;&lt;div class="lineno"&gt;9&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;viewDidLoad&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;super&lt;/span&gt; &lt;span class="n"&gt;viewDidLoad&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subScrollView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;これによってUIScrollViewDelegate内のメソッドが使えるようになる。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>【Objective-C】iOSで色指定(16進数)を簡単にする方法</title>
    <link rel="alternate" href="http://amasok.github.io/blog/article/2014/03/18/uicolor16.html"/>
    <id>http://amasok.github.io/blog/article/2014/03/18/uicolor16.html</id>
    <published>2014-03-17T20:02:00Z</published>
    <updated>2014-03-19T19:11:25+09:00</updated>
    <author>
      <name>amasok</name>
    </author>
    <content type="html">&lt;h2 id="toc_0"&gt;UIColorを16進数で色を指定する方法&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://dev.classmethod.jp/smartphone/ios-tips-2/"&gt;http://dev.classmethod.jp/smartphone/ios-tips-2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このサイトがすごい。&lt;/p&gt;

&lt;p&gt;UIColorを16進数で指定できるようにカテゴリ拡張している。&lt;/p&gt;

&lt;p&gt;単純だけど、初心者の僕には&lt;/p&gt;

&lt;p&gt;「あ、カテゴリってこうやって使うんだ」&lt;/p&gt;

&lt;p&gt;って勉強になった。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;ストーリーボードでの色を16進数で指定する方法&lt;/h2&gt;

&lt;p&gt;また、xcodeのストーリーボードも通常では16真数での色してはできません。&lt;/p&gt;

&lt;p&gt;そこで下記URL.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://wafflesoftware.net/hexpicker/"&gt;http://wafflesoftware.net/hexpicker/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;やり方は下記。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://paranishian.hateblo.jp/entry/xcode/hexcolor"&gt;http://paranishian.hateblo.jp/entry/xcode/hexcolor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;どれも目から鱗の捗りようです。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>【Objective-C】カスタムセル内の状態を永続化(保存)させたい</title>
    <link rel="alternate" href="http://amasok.github.io/blog/article/2014/03/18/ios-userdefault.html"/>
    <id>http://amasok.github.io/blog/article/2014/03/18/ios-userdefault.html</id>
    <published>2014-03-17T15:18:00Z</published>
    <updated>2014-03-19T19:11:25+09:00</updated>
    <author>
      <name>amasok</name>
    </author>
    <content type="html">&lt;p&gt;以下のやり方でできました。 永続化させるためにNSUserDefaultを使用する。&lt;/p&gt;

&lt;p&gt;カスタムセル用クラスcell.mにて セル毎にユニークなIDを取得できるようsetterを作成する。&lt;/p&gt;

&lt;p&gt;ユニークな文字列は自分で生成する。&lt;/p&gt;
&lt;pre class="highlight c"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;div class="lineno"&gt;2&lt;/div&gt;&lt;div class="lineno"&gt;3&lt;/div&gt;&lt;div class="lineno"&gt;4&lt;/div&gt;&lt;div class="lineno"&gt;5&lt;/div&gt;&lt;div class="lineno"&gt;6&lt;/div&gt;&lt;div class="lineno"&gt;7&lt;/div&gt;&lt;div class="lineno"&gt;8&lt;/div&gt;&lt;div class="lineno"&gt;9&lt;/div&gt;&lt;div class="lineno"&gt;10&lt;/div&gt;&lt;div class="lineno"&gt;11&lt;/div&gt;&lt;div class="lineno"&gt;12&lt;/div&gt;&lt;div class="lineno"&gt;13&lt;/div&gt;&lt;div class="lineno"&gt;14&lt;/div&gt;&lt;div class="lineno"&gt;15&lt;/div&gt;&lt;div class="lineno"&gt;16&lt;/div&gt;&lt;div class="lineno"&gt;17&lt;/div&gt;&lt;div class="lineno"&gt;18&lt;/div&gt;&lt;div class="lineno"&gt;19&lt;/div&gt;&lt;div class="lineno"&gt;20&lt;/div&gt;&lt;div class="lineno"&gt;21&lt;/div&gt;&lt;div class="lineno"&gt;22&lt;/div&gt;&lt;div class="lineno"&gt;23&lt;/div&gt;&lt;div class="lineno"&gt;24&lt;/div&gt;&lt;div class="lineno"&gt;25&lt;/div&gt;&lt;div class="lineno"&gt;26&lt;/div&gt;&lt;div class="lineno"&gt;27&lt;/div&gt;&lt;div class="lineno"&gt;28&lt;/div&gt;&lt;div class="lineno"&gt;29&lt;/div&gt;&lt;div class="lineno"&gt;30&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;
&lt;span class="c1"&gt;//   #indexPath=セル毎に割り振られたユニークな文字列
&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;setIndex&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;indexPath&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//indexPathをインスタンス変数化
&lt;/span&gt;    &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;indexPath&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//NSUserDefaultsを生成
&lt;/span&gt;    &lt;span class="n"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;checkDefaults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;//NSUserDefaultからindexをキーに値を取得する
&lt;/span&gt;    &lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;checkDefaults&lt;/span&gt; &lt;span class="n"&gt;stringForKey&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;//値があればその値をボタンにセット
&lt;/span&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_checkButton&lt;/span&gt; &lt;span class="n"&gt;setTitle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;forState&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;UIControlStateNormal&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;//値がなければデフォルトの◯をセット&amp;amp;◯をindexをキーとしてセット
&lt;/span&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_checkButton&lt;/span&gt; &lt;span class="n"&gt;setTitle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;◯&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;forState&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;UIControlStateNormal&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;checkDefaults&lt;/span&gt; &lt;span class="n"&gt;setObject&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;◯&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//ボタンをタップした時の処理
&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IBAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;checkAction&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;NSUserDefaults&lt;/span&gt;&lt;span class="err"&gt;を生成&lt;/span&gt;
    &lt;span class="n"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;checkDefaults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="err"&gt;#ボタンにセットされている文字列ば☓なら◯を、◯なら☓の文字列を変数&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="err"&gt;に取得。&lt;/span&gt;
    &lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_checkButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;titleLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;isEqual&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;☓&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;◯&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;☓&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;NSUserDefauls&lt;/span&gt;&lt;span class="err"&gt;で&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="err"&gt;を&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="err"&gt;をキーとしてセット&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;checkDefaults&lt;/span&gt; &lt;span class="n"&gt;setObject&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="err"&gt;#ボタン名に&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="err"&gt;をセット&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_checkButton&lt;/span&gt; &lt;span class="n"&gt;setTitle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;forState&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;UIControlStateNormal&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>【Objective-C】文字列内に特定の文字列があったら削除する</title>
    <link rel="alternate" href="http://amasok.github.io/blog/article/2014/03/17/ios-deleteCharactersInRange.html"/>
    <id>http://amasok.github.io/blog/article/2014/03/17/ios-deleteCharactersInRange.html</id>
    <published>2014-03-17T14:32:00Z</published>
    <updated>2014-03-19T19:11:25+09:00</updated>
    <author>
      <name>amasok</name>
    </author>
    <content type="html">&lt;p&gt;HTMLソースから特定のデータを削除する&lt;/p&gt;
&lt;pre class="highlight c"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;div class="lineno"&gt;2&lt;/div&gt;&lt;div class="lineno"&gt;3&lt;/div&gt;&lt;div class="lineno"&gt;4&lt;/div&gt;&lt;div class="lineno"&gt;5&lt;/div&gt;&lt;div class="lineno"&gt;6&lt;/div&gt;&lt;div class="lineno"&gt;7&lt;/div&gt;&lt;div class="lineno"&gt;8&lt;/div&gt;&lt;div class="lineno"&gt;9&lt;/div&gt;&lt;div class="lineno"&gt;10&lt;/div&gt;&lt;div class="lineno"&gt;11&lt;/div&gt;&lt;div class="lineno"&gt;12&lt;/div&gt;&lt;div class="lineno"&gt;13&lt;/div&gt;&lt;div class="lineno"&gt;14&lt;/div&gt;&lt;div class="lineno"&gt;15&lt;/div&gt;&lt;div class="lineno"&gt;16&lt;/div&gt;&lt;div class="lineno"&gt;17&lt;/div&gt;&lt;div class="lineno"&gt;18&lt;/div&gt;&lt;div class="lineno"&gt;19&lt;/div&gt;&lt;div class="lineno"&gt;20&lt;/div&gt;&lt;div class="lineno"&gt;21&lt;/div&gt;&lt;div class="lineno"&gt;22&lt;/div&gt;&lt;div class="lineno"&gt;23&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;  &lt;span class="c1"&gt;//
&lt;/span&gt;  &lt;span class="c1"&gt;// 引数htmlSourceはHTMLソース
&lt;/span&gt;  &lt;span class="c1"&gt;//
&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NSMutableString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NSMutableString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;htmlSource&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;NSRange&lt;/span&gt; &lt;span class="n"&gt;searchStart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;htmlSource&lt;/span&gt; &lt;span class="n"&gt;rangeOfString&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;search_start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;NSRange&lt;/span&gt; &lt;span class="n"&gt;searchEnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;htmlSource&lt;/span&gt; &lt;span class="n"&gt;rangeOfString&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;serach_end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//  searchStartとsearchEndが両方があった場合に処理する
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;searchSocialStart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;NSNotFound&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class="n"&gt;searchSocialEnd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;NSNotFound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;deleteLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;searchSocialStart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;deleteLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;searchSocialEnd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;searchSocialStart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;searchSocialEnd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//  deleteLocationは削除する位置
&lt;/span&gt;        &lt;span class="c1"&gt;//  deleteLengthは削除する長さ
&lt;/span&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;htmlSource&lt;/span&gt; &lt;span class="n"&gt;deleteCharactersInRange&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;NSMakeRange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deleteLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;deleteLength&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;htmlSource&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>oh_my_zshがすごい</title>
    <link rel="alternate" href="http://amasok.github.io/blog/article/2014/01/30/oh_my_zsh.html"/>
    <id>http://amasok.github.io/blog/article/2014/01/30/oh_my_zsh.html</id>
    <published>2014-01-30T12:12:00Z</published>
    <updated>2014-03-19T19:11:25+09:00</updated>
    <author>
      <name>amasok</name>
    </author>
    <content type="html">&lt;p&gt;職場のshellを最近zshにしたのだが、便利すぎたのでとうとう家でもzshに切り替えた話。&lt;/p&gt;

&lt;p&gt;なぜかちょっとだけはまったので、そのときのことをメモ&lt;/p&gt;

&lt;p&gt;&lt;a href="http://qiita.com/udzura/items/0d08d71d809bfd8c5981"&gt;http://qiita.com/udzura/items/0d08d71d809bfd8c5981&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;基本的には上記URL通りやるだけ。
何も変わらないです。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;前提条件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;brewが入ってる&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_1"&gt;方法&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;zshのインストール&lt;/em&gt;  &lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;brew install zsh
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;oh-my-zshのインストール&lt;/em&gt;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;https://github.com/robbyrussell/oh-my-zsh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;公式ページのsetupをうつだけ。&lt;/p&gt;

&lt;p&gt;zshに切り替えるのにパスワードを求められる。&lt;br&gt;
ここでミスった。&lt;/p&gt;

&lt;p&gt;多分パスワードを間違えたんだと思う。&lt;/p&gt;

&lt;p&gt;本当なら新しいターミナルを立ち上げたらzshに切り替わってるはずが、bashのままだった。&lt;/p&gt;

&lt;p&gt;なのに、&lt;em&gt;.zshrc&lt;/em&gt;を編集して再読み込みしようとしていた。&lt;/p&gt;

&lt;p&gt;その時のエラーがこれ。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;div class="lineno"&gt;2&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;~/.oh-my-zsh/oh-my-zsh.sh: line 13: syntax error near unexpected token &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;
&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;で、同じようにはまっている人がgithubのissuesにいらっしゃった。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/robbyrussell/oh-my-zsh/issues/989"&gt;https://github.com/robbyrussell/oh-my-zsh/issues/989&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;まあ、要はzshに切り替えてからじゃないとoh-my-zsh.shのシェルスクリプトは動かないよってことだ。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;chsh -s /bin/zsh
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;これで、再度パスワードを求められるので正しく入力してターミナルを再起動。&lt;/p&gt;

&lt;p&gt;そうすると、zshで立ち上がってくれるようになった。&lt;/p&gt;

&lt;h2 id="toc_2"&gt;便利な点&lt;/h2&gt;

&lt;p&gt;これは、何が便利ってoh-my-zshのプラグインが便利&lt;/p&gt;

&lt;p&gt;&lt;em&gt;.zshrc&lt;/em&gt;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;span class="nv"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;git ruby osx bundler brew rails emoji-clock&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;ここらへんのプラグインが便利だ。&lt;/p&gt;

&lt;p&gt;特にgitはすごい。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl"&gt;&lt;div class="lineno"&gt;1&lt;/div&gt;&lt;div class="lineno"&gt;2&lt;/div&gt;&lt;div class="lineno"&gt;3&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;➜  &lt;span class="nb"&gt;source&lt;/span&gt;-amasok.github git:&lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)&lt;/span&gt; ✗ git checkout slim
Switched to branch &lt;span class="s1"&gt;&amp;#39;slim&amp;#39;&lt;/span&gt;
➜  &lt;span class="nb"&gt;source&lt;/span&gt;-amasok.github git:&lt;span class="o"&gt;(&lt;/span&gt;slim&lt;span class="o"&gt;)&lt;/span&gt; ✗
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/pre&gt;
&lt;p&gt;このように、自分が今なんのブランチで作業しているのかが一目でわかる。&lt;/p&gt;

&lt;p&gt;まじ、すげぇ。&lt;/p&gt;
</content>
  </entry>
</feed>
